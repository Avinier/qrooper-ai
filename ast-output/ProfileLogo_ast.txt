AST for temp_dir\ARTGuru-AI-main\app\components\UI\ProfileLogo.tsx
==================================================
program [import React from 'react';
import { motion } from 'framer-motion';
import { User } from 'lucide-react';

const ProfileLogo = () => {
  return (
    <motion.div
      className="fixed top-4 right-4 z-50"
      initial={{ opacity: 0, scale: 0.5 }}
      animate={{ opacity: 1, scale: 1 }}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }}
    >
      <div className="w-16 h-16 rounded-full bg-white/40 backdrop-blur-lg shadow-md flex items-center justify-center cursor-pointer hover:bg-gray-50">
        <User className="w-10 h-10 text-gray-600" />
      </div>
    </motion.div>
  );
};

export default ProfileLogo;] (0:0-20:27)
  import_statement [import React from 'react';] (0:0-0:26)
    import [import] (0:0-0:6)
    import_clause [React] (0:7-0:12)
      identifier [React] (0:7-0:12)
    from [from] (0:13-0:17)
    string ['react'] (0:18-0:25)
      ' ['] (0:18-0:19)
      string_fragment [react] (0:19-0:24)
      ' ['] (0:24-0:25)
    ; [;] (0:25-0:26)
  import_statement [import { motion } from 'framer-motion';] (1:0-1:39)
    import [import] (1:0-1:6)
    import_clause [{ motion }] (1:7-1:17)
      named_imports [{ motion }] (1:7-1:17)
        { [{] (1:7-1:8)
        import_specifier [motion] (1:9-1:15)
          identifier [motion] (1:9-1:15)
        } [}] (1:16-1:17)
    from [from] (1:18-1:22)
    string ['framer-motion'] (1:23-1:38)
      ' ['] (1:23-1:24)
      string_fragment [framer-motion] (1:24-1:37)
      ' ['] (1:37-1:38)
    ; [;] (1:38-1:39)
  import_statement [import { User } from 'lucide-react';] (2:0-2:36)
    import [import] (2:0-2:6)
    import_clause [{ User }] (2:7-2:15)
      named_imports [{ User }] (2:7-2:15)
        { [{] (2:7-2:8)
        import_specifier [User] (2:9-2:13)
          identifier [User] (2:9-2:13)
        } [}] (2:14-2:15)
    from [from] (2:16-2:20)
    string ['lucide-react'] (2:21-2:35)
      ' ['] (2:21-2:22)
      string_fragment [lucide-react] (2:22-2:34)
      ' ['] (2:34-2:35)
    ; [;] (2:35-2:36)
  lexical_declaration [const ProfileLogo = () => {
  return (
    <motion.div
      className="fixed top-4 right-4 z-50"
      initial={{ opacity: 0, scale: 0.5 }}
      animate={{ opacity: 1, scale: 1 }}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }}
    >
      <div className="w-16 h-16 rounded-full bg-white/40 backdrop-blur-lg shadow-md flex items-center justify-center cursor-pointer hover:bg-gray-50">
        <User className="w-10 h-10 text-gray-600" />
      </div>
    </motion.div>
  );
};] (4:0-18:2)
    const [const] (4:0-4:5)
    variable_declarator [ProfileLogo = () => {
  return (
    <motion.div
      className="fixed top-4 right-4 z-50"
      initial={{ opacity: 0, scale: 0.5 }}
      animate={{ opacity: 1, scale: 1 }}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }}
    >
      <div className="w-16 h-16 rounded-full bg-white/40 backdrop-blur-lg shadow-md flex items-center justify-center cursor-pointer hover:bg-gray-50">
        <User className="w-10 h-10 text-gray-600" />
      </div>
    </motion.div>
  );
}] (4:6-18:1)
      identifier [ProfileLogo] (4:6-4:17)
      = [=] (4:18-4:19)
      arrow_function [() => {
  return (
    <motion.div
      className="fixed top-4 right-4 z-50"
      initial={{ opacity: 0, scale: 0.5 }}
      animate={{ opacity: 1, scale: 1 }}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }}
    >
      <div className="w-16 h-16 rounded-full bg-white/40 backdrop-blur-lg shadow-md flex items-center justify-center cursor-pointer hover:bg-gray-50">
        <User className="w-10 h-10 text-gray-600" />
      </div>
    </motion.div>
  );
}] (4:20-18:1)
        formal_parameters [()] (4:20-4:22)
          ( [(] (4:20-4:21)
          ) [)] (4:21-4:22)
        => [=>] (4:23-4:25)
        statement_block [{
  return (
    <motion.div
      className="fixed top-4 right-4 z-50"
      initial={{ opacity: 0, scale: 0.5 }}
      animate={{ opacity: 1, scale: 1 }}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }}
    >
      <div className="w-16 h-16 rounded-full bg-white/40 backdrop-blur-lg shadow-md flex items-center justify-center cursor-pointer hover:bg-gray-50">
        <User className="w-10 h-10 text-gray-600" />
      </div>
    </motion.div>
  );
}] (4:26-18:1)
          { [{] (4:26-4:27)
          return_statement [return (
    <motion.div
      className="fixed top-4 right-4 z-50"
      initial={{ opacity: 0, scale: 0.5 }}
      animate={{ opacity: 1, scale: 1 }}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }}
    >
      <div className="w-16 h-16 rounded-full bg-white/40 backdrop-blur-lg shadow-md flex items-center justify-center cursor-pointer hover:bg-gray-50">
        <User className="w-10 h-10 text-gray-600" />
      </div>
    </motion.div>
  );] (5:2-17:4)
            return [return] (5:2-5:8)
            parenthesized_expression [(
    <motion.div
      className="fixed top-4 right-4 z-50"
      initial={{ opacity: 0, scale: 0.5 }}
      animate={{ opacity: 1, scale: 1 }}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }}
    >
      <div className="w-16 h-16 rounded-full bg-white/40 backdrop-blur-lg shadow-md flex items-center justify-center cursor-pointer hover:bg-gray-50">
        <User className="w-10 h-10 text-gray-600" />
      </div>
    </motion.div>
  )] (5:9-17:3)
              ( [(] (5:9-5:10)
              ERROR [<motion.div
      className="fixed top-4 right-4 z-50"
      initial={{ opacity: 0, scale: 0.5 }}
      animate={{ opacity: 1, scale: 1 }}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }}
    >
      <div] (6:4-13:10)
                type_parameters [<motion.div
      className="fixed top-4 right-4 z-50"
      initial={{ opacity: 0, scale: 0.5 }}
      animate={{ opacity: 1, scale: 1 }}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }}
    >] (6:4-12:5)
                  < [<] (6:4-6:5)
                  ERROR [motion.div] (6:5-6:15)
                    nested_identifier [motion.div] (6:5-6:15)
                      identifier [motion] (6:5-6:11)
                      . [.] (6:11-6:12)
                      property_identifier [div] (6:12-6:15)
                  type_parameter [className="fixed top-4 right-4 z-50"] (7:6-7:42)
                    type_identifier [className] (7:6-7:15)
                    default_type [="fixed top-4 right-4 z-50"] (7:15-7:42)
                      = [=] (7:15-7:16)
                      literal_type ["fixed top-4 right-4 z-50"] (7:16-7:42)
                        string ["fixed top-4 right-4 z-50"] (7:16-7:42)
                          " ["] (7:16-7:17)
                          string_fragment [fixed top-4 right-4 z-50] (7:17-7:41)
                          " ["] (7:41-7:42)
                  ERROR [initial={{ opacity: 0] (8:6-8:27)
                    identifier [initial] (8:6-8:13)
                    = [=] (8:13-8:14)
                    { [{] (8:14-8:15)
                    { [{] (8:15-8:16)
                    identifier [opacity] (8:17-8:24)
                    : [:] (8:24-8:25)
                    number [0] (8:26-8:27)
                  , [,] (8:27-8:28)
                  type_parameter [scale: 0.5 }}
      animate={{ opacity: 1, scale: 1 }}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }] (8:29-11:31)
                    type_identifier [scale] (8:29-8:34)
                    constraint [: 0.5 }}
      animate] (8:34-9:13)
                      : [:] (8:34-8:35)
                      ERROR [0.5 }}] (8:36-8:42)
                        literal_type [0.5] (8:36-8:39)
                          number [0.5] (8:36-8:39)
                        } [}] (8:40-8:41)
                        } [}] (8:41-8:42)
                      type_identifier [animate] (9:6-9:13)
                    default_type [={{ opacity: 1, scale: 1 }}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }] (9:13-11:31)
                      = [=] (9:13-9:14)
                      ERROR [{{ opacity: 1, scale: 1 }}
      whileHover={{ scale: 1.1 }}
      whileTap={] (9:14-11:16)
                        { [{] (9:14-9:15)
                        object_type [{ opacity: 1, scale: 1 }] (9:15-9:39)
                          { [{] (9:15-9:16)
                          property_signature [opacity: 1] (9:17-9:27)
                            property_identifier [opacity] (9:17-9:24)
                            type_annotation [: 1] (9:24-9:27)
                              : [:] (9:24-9:25)
                              literal_type [1] (9:26-9:27)
                                number [1] (9:26-9:27)
                          , [,] (9:27-9:28)
                          property_signature [scale: 1] (9:29-9:37)
                            property_identifier [scale] (9:29-9:34)
                            type_annotation [: 1] (9:34-9:37)
                              : [:] (9:34-9:35)
                              literal_type [1] (9:36-9:37)
                                number [1] (9:36-9:37)
                          } [}] (9:38-9:39)
                        } [}] (9:39-9:40)
                        type_identifier [whileHover] (10:6-10:16)
                        = [=] (10:16-10:17)
                        { [{] (10:17-10:18)
                        object_type [{ scale: 1.1 }] (10:18-10:32)
                          { [{] (10:18-10:19)
                          property_signature [scale: 1.1] (10:20-10:30)
                            property_identifier [scale] (10:20-10:25)
                            type_annotation [: 1.1] (10:25-10:30)
                              : [:] (10:25-10:26)
                              literal_type [1.1] (10:27-10:30)
                                number [1.1] (10:27-10:30)
                          } [}] (10:31-10:32)
                        } [}] (10:32-10:33)
                        type_identifier [whileTap] (11:6-11:14)
                        = [=] (11:14-11:15)
                        { [{] (11:15-11:16)
                      object_type [{ scale: 0.95 }] (11:16-11:31)
                        { [{] (11:16-11:17)
                        property_signature [scale: 0.95] (11:18-11:29)
                          property_identifier [scale] (11:18-11:23)
                          type_annotation [: 0.95] (11:23-11:29)
                            : [:] (11:23-11:24)
                            literal_type [0.95] (11:25-11:29)
                              number [0.95] (11:25-11:29)
                        } [}] (11:30-11:31)
                  ERROR [}] (11:31-11:32)
                    } [}] (11:31-11:32)
                  > [>] (12:4-12:5)
                < [<] (13:6-13:7)
                identifier [div] (13:7-13:10)
              assignment_expression [className="w-16 h-16 rounded-full bg-white/40 backdrop-blur-lg shadow-md flex items-center justify-center cursor-pointer hover:bg-gray-50">
        <User className="w-10 h-10 text-gray-600" />
      </div>
    </motion.div>] (13:11-16:17)
                identifier [className] (13:11-13:20)
                = [=] (13:20-13:21)
                binary_expression ["w-16 h-16 rounded-full bg-white/40 backdrop-blur-lg shadow-md flex items-center justify-center cursor-pointer hover:bg-gray-50">
        <User className="w-10 h-10 text-gray-600" />
      </div>
    </motion.div>] (13:21-16:17)
                  string ["w-16 h-16 rounded-full bg-white/40 backdrop-blur-lg shadow-md flex items-center justify-center cursor-pointer hover:bg-gray-50"] (13:21-13:149)
                    " ["] (13:21-13:22)
                    string_fragment [w-16 h-16 rounded-full bg-white/40 backdrop-blur-lg shadow-md flex items-center justify-center cursor-pointer hover:bg-gray-50] (13:22-13:148)
                    " ["] (13:148-13:149)
                  > [>] (13:149-13:150)
                  type_assertion [<User className="w-10 h-10 text-gray-600" />
      </div>
    </motion.div>] (14:8-16:17)
                    type_arguments [<User] (14:8-14:13)
                      < [<] (14:8-14:9)
                      type_identifier [User] (14:9-14:13)
                      > [] (14:13-14:13)
                    assignment_expression [className="w-10 h-10 text-gray-600" />
      </div>
    </motion.div>] (14:14-16:17)
                      identifier [className] (14:14-14:23)
                      = [=] (14:23-14:24)
                      binary_expression ["w-10 h-10 text-gray-600" />
      </div>
    </motion.div>] (14:24-16:17)
                        string ["w-10 h-10 text-gray-600"] (14:24-14:49)
                          " ["] (14:24-14:25)
                          string_fragment [w-10 h-10 text-gray-600] (14:25-14:48)
                          " ["] (14:48-14:49)
                        / [/] (14:50-14:51)
                        ERROR [>] (14:51-14:52)
                          > [>] (14:51-14:52)
                        type_assertion [</div>
    </motion.div>] (15:6-16:17)
                          type_arguments [</div>] (15:6-15:12)
                            < [<] (15:6-15:7)
                            ERROR [/] (15:7-15:8)
                              / [/] (15:7-15:8)
                            type_identifier [div] (15:8-15:11)
                            > [>] (15:11-15:12)
                          type_assertion [</motion.div>] (16:4-16:17)
                            type_arguments [</motion.div>] (16:4-16:17)
                              < [<] (16:4-16:5)
                              ERROR [/] (16:5-16:6)
                                / [/] (16:5-16:6)
                              nested_type_identifier [motion.div] (16:6-16:16)
                                identifier [motion] (16:6-16:12)
                                . [.] (16:12-16:13)
                                type_identifier [div] (16:13-16:16)
                              > [>] (16:16-16:17)
                            identifier [] (16:17-16:17)
              ) [)] (17:2-17:3)
            ; [;] (17:3-17:4)
          } [}] (18:0-18:1)
    ; [;] (18:1-18:2)
  export_statement [export default ProfileLogo;] (20:0-20:27)
    export [export] (20:0-20:6)
    default [default] (20:7-20:14)
    identifier [ProfileLogo] (20:15-20:26)
    ; [;] (20:26-20:27)

AST for temp_dir\ARTGuru-AI-main\app\components\UI\GlassContainer.tsx
==================================================
program [import React, { useState } from 'react';

const GlassContainer = ({ children, className = '', isInteractive = true }) => {
  const [isFocused, setIsFocused] = useState(false);

  const glassStyles = `
    relative
    backdrop-blur-xl
    bg-white/15
    rounded-xl
    border
    border-white/30
    transition-all
    duration-300
    before:absolute
    before:inset-0
    before:backdrop-blur-xl
    before:bg-white/5
    before:rounded-xl
    before:-z-10
    ${isInteractive ? (
      isFocused 
        ? 'shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50' 
        : 'hover:border-white/40 hover:bg-white/20'
    ) : ''}
    ${className}
  `;

  return (
    <div
      className={glassStyles}
      onMouseEnter={() => isInteractive && setIsFocused(true)}
      onMouseLeave={() => isInteractive && setIsFocused(false)}
    >
      {children}
    </div>
  );
};

export default GlassContainer;] (0:0-39:30)
  import_statement [import React, { useState } from 'react';] (0:0-0:40)
    import [import] (0:0-0:6)
    import_clause [React, { useState }] (0:7-0:26)
      identifier [React] (0:7-0:12)
      , [,] (0:12-0:13)
      named_imports [{ useState }] (0:14-0:26)
        { [{] (0:14-0:15)
        import_specifier [useState] (0:16-0:24)
          identifier [useState] (0:16-0:24)
        } [}] (0:25-0:26)
    from [from] (0:27-0:31)
    string ['react'] (0:32-0:39)
      ' ['] (0:32-0:33)
      string_fragment [react] (0:33-0:38)
      ' ['] (0:38-0:39)
    ; [;] (0:39-0:40)
  lexical_declaration [const GlassContainer = ({ children, className = '', isInteractive = true }) => {
  const [isFocused, setIsFocused] = useState(false);

  const glassStyles = `
    relative
    backdrop-blur-xl
    bg-white/15
    rounded-xl
    border
    border-white/30
    transition-all
    duration-300
    before:absolute
    before:inset-0
    before:backdrop-blur-xl
    before:bg-white/5
    before:rounded-xl
    before:-z-10
    ${isInteractive ? (
      isFocused 
        ? 'shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50' 
        : 'hover:border-white/40 hover:bg-white/20'
    ) : ''}
    ${className}
  `;

  return (
    <div
      className={glassStyles}
      onMouseEnter={() => isInteractive && setIsFocused(true)}
      onMouseLeave={() => isInteractive && setIsFocused(false)}
    >
      {children}
    </div>
  );
};] (2:0-37:2)
    const [const] (2:0-2:5)
    variable_declarator [GlassContainer = ({ children, className = '', isInteractive = true }) => {
  const [isFocused, setIsFocused] = useState(false);

  const glassStyles = `
    relative
    backdrop-blur-xl
    bg-white/15
    rounded-xl
    border
    border-white/30
    transition-all
    duration-300
    before:absolute
    before:inset-0
    before:backdrop-blur-xl
    before:bg-white/5
    before:rounded-xl
    before:-z-10
    ${isInteractive ? (
      isFocused 
        ? 'shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50' 
        : 'hover:border-white/40 hover:bg-white/20'
    ) : ''}
    ${className}
  `;

  return (
    <div
      className={glassStyles}
      onMouseEnter={() => isInteractive && setIsFocused(true)}
      onMouseLeave={() => isInteractive && setIsFocused(false)}
    >
      {children}
    </div>
  );
}] (2:6-37:1)
      identifier [GlassContainer] (2:6-2:20)
      = [=] (2:21-2:22)
      arrow_function [({ children, className = '', isInteractive = true }) => {
  const [isFocused, setIsFocused] = useState(false);

  const glassStyles = `
    relative
    backdrop-blur-xl
    bg-white/15
    rounded-xl
    border
    border-white/30
    transition-all
    duration-300
    before:absolute
    before:inset-0
    before:backdrop-blur-xl
    before:bg-white/5
    before:rounded-xl
    before:-z-10
    ${isInteractive ? (
      isFocused 
        ? 'shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50' 
        : 'hover:border-white/40 hover:bg-white/20'
    ) : ''}
    ${className}
  `;

  return (
    <div
      className={glassStyles}
      onMouseEnter={() => isInteractive && setIsFocused(true)}
      onMouseLeave={() => isInteractive && setIsFocused(false)}
    >
      {children}
    </div>
  );
}] (2:23-37:1)
        formal_parameters [({ children, className = '', isInteractive = true })] (2:23-2:75)
          ( [(] (2:23-2:24)
          required_parameter [{ children, className = '', isInteractive = true }] (2:24-2:74)
            object_pattern [{ children, className = '', isInteractive = true }] (2:24-2:74)
              { [{] (2:24-2:25)
              shorthand_property_identifier_pattern [children] (2:26-2:34)
              , [,] (2:34-2:35)
              object_assignment_pattern [className = ''] (2:36-2:50)
                shorthand_property_identifier_pattern [className] (2:36-2:45)
                = [=] (2:46-2:47)
                string [''] (2:48-2:50)
                  ' ['] (2:48-2:49)
                  ' ['] (2:49-2:50)
              , [,] (2:50-2:51)
              object_assignment_pattern [isInteractive = true] (2:52-2:72)
                shorthand_property_identifier_pattern [isInteractive] (2:52-2:65)
                = [=] (2:66-2:67)
                true [true] (2:68-2:72)
              } [}] (2:73-2:74)
          ) [)] (2:74-2:75)
        => [=>] (2:76-2:78)
        statement_block [{
  const [isFocused, setIsFocused] = useState(false);

  const glassStyles = `
    relative
    backdrop-blur-xl
    bg-white/15
    rounded-xl
    border
    border-white/30
    transition-all
    duration-300
    before:absolute
    before:inset-0
    before:backdrop-blur-xl
    before:bg-white/5
    before:rounded-xl
    before:-z-10
    ${isInteractive ? (
      isFocused 
        ? 'shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50' 
        : 'hover:border-white/40 hover:bg-white/20'
    ) : ''}
    ${className}
  `;

  return (
    <div
      className={glassStyles}
      onMouseEnter={() => isInteractive && setIsFocused(true)}
      onMouseLeave={() => isInteractive && setIsFocused(false)}
    >
      {children}
    </div>
  );
}] (2:79-37:1)
          { [{] (2:79-2:80)
          lexical_declaration [const [isFocused, setIsFocused] = useState(false);] (3:2-3:52)
            const [const] (3:2-3:7)
            variable_declarator [[isFocused, setIsFocused] = useState(false)] (3:8-3:51)
              array_pattern [[isFocused, setIsFocused]] (3:8-3:33)
                [ [[] (3:8-3:9)
                identifier [isFocused] (3:9-3:18)
                , [,] (3:18-3:19)
                identifier [setIsFocused] (3:20-3:32)
                ] []] (3:32-3:33)
              = [=] (3:34-3:35)
              call_expression [useState(false)] (3:36-3:51)
                identifier [useState] (3:36-3:44)
                arguments [(false)] (3:44-3:51)
                  ( [(] (3:44-3:45)
                  false [false] (3:45-3:50)
                  ) [)] (3:50-3:51)
            ; [;] (3:51-3:52)
          lexical_declaration [const glassStyles = `
    relative
    backdrop-blur-xl
    bg-white/15
    rounded-xl
    border
    border-white/30
    transition-all
    duration-300
    before:absolute
    before:inset-0
    before:backdrop-blur-xl
    before:bg-white/5
    before:rounded-xl
    before:-z-10
    ${isInteractive ? (
      isFocused 
        ? 'shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50' 
        : 'hover:border-white/40 hover:bg-white/20'
    ) : ''}
    ${className}
  `;] (5:2-26:4)
            const [const] (5:2-5:7)
            variable_declarator [glassStyles = `
    relative
    backdrop-blur-xl
    bg-white/15
    rounded-xl
    border
    border-white/30
    transition-all
    duration-300
    before:absolute
    before:inset-0
    before:backdrop-blur-xl
    before:bg-white/5
    before:rounded-xl
    before:-z-10
    ${isInteractive ? (
      isFocused 
        ? 'shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50' 
        : 'hover:border-white/40 hover:bg-white/20'
    ) : ''}
    ${className}
  `] (5:8-26:3)
              identifier [glassStyles] (5:8-5:19)
              = [=] (5:20-5:21)
              template_string [`
    relative
    backdrop-blur-xl
    bg-white/15
    rounded-xl
    border
    border-white/30
    transition-all
    duration-300
    before:absolute
    before:inset-0
    before:backdrop-blur-xl
    before:bg-white/5
    before:rounded-xl
    before:-z-10
    ${isInteractive ? (
      isFocused 
        ? 'shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50' 
        : 'hover:border-white/40 hover:bg-white/20'
    ) : ''}
    ${className}
  `] (5:22-26:3)
                ` [`] (5:22-5:23)
                template_substitution [${isInteractive ? (
      isFocused 
        ? 'shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50' 
        : 'hover:border-white/40 hover:bg-white/20'
    ) : ''}] (20:4-24:11)
                  ${ [${] (20:4-20:6)
                  ternary_expression [isInteractive ? (
      isFocused 
        ? 'shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50' 
        : 'hover:border-white/40 hover:bg-white/20'
    ) : ''] (20:6-24:10)
                    identifier [isInteractive] (20:6-20:19)
                    ? [?] (20:20-20:21)
                    parenthesized_expression [(
      isFocused 
        ? 'shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50' 
        : 'hover:border-white/40 hover:bg-white/20'
    )] (20:22-24:5)
                      ( [(] (20:22-20:23)
                      ternary_expression [isFocused 
        ? 'shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50' 
        : 'hover:border-white/40 hover:bg-white/20'] (21:6-23:51)
                        identifier [isFocused] (21:6-21:15)
                        ? [?] (22:8-22:9)
                        string ['shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50'] (22:10-22:67)
                          ' ['] (22:10-22:11)
                          string_fragment [shadow-[0_0_25px_rgba(255,255,255,0.6)] border-white/50] (22:11-22:66)
                          ' ['] (22:66-22:67)
                        : [:] (23:8-23:9)
                        string ['hover:border-white/40 hover:bg-white/20'] (23:10-23:51)
                          ' ['] (23:10-23:11)
                          string_fragment [hover:border-white/40 hover:bg-white/20] (23:11-23:50)
                          ' ['] (23:50-23:51)
                      ) [)] (24:4-24:5)
                    : [:] (24:6-24:7)
                    string [''] (24:8-24:10)
                      ' ['] (24:8-24:9)
                      ' ['] (24:9-24:10)
                  } [}] (24:10-24:11)
                template_substitution [${className}] (25:4-25:16)
                  ${ [${] (25:4-25:6)
                  identifier [className] (25:6-25:15)
                  } [}] (25:15-25:16)
                ` [`] (26:2-26:3)
            ; [;] (26:3-26:4)
          return_statement [return (
    <div
      className={glassStyles}
      onMouseEnter={() => isInteractive && setIsFocused(true)}
      onMouseLeave={() => isInteractive && setIsFocused(false)}
    >
      {children}
    </div>
  );] (28:2-36:4)
            return [return] (28:2-28:8)
            parenthesized_expression [(
    <div
      className={glassStyles}
      onMouseEnter={() => isInteractive && setIsFocused(true)}
      onMouseLeave={() => isInteractive && setIsFocused(false)}
    >
      {children}
    </div>
  )] (28:9-36:3)
              ( [(] (28:9-28:10)
              ERROR [<div
      className={glassStyles}
      onMouseEnter={() => isInteractive && setIsFocused(true)}
      onMouseLeave={() => isInteractive && setIsFocused(false)}
    >] (29:4-33:5)
                type_parameters [<div
      className={glassStyles}
      onMouseEnter={() => isInteractive && setIsFocused(true)}
      onMouseLeave={() => isInteractive && setIsFocused(false)}
    >] (29:4-33:5)
                  < [<] (29:4-29:5)
                  ERROR [div] (29:5-29:8)
                    identifier [div] (29:5-29:8)
                  type_parameter [className={glassStyles}
      onMouseEnter={() => isInteractive && setIsFocused(true)}
      onMouseLeave={() => isInteractive && setIsFocused(false)] (30:6-32:62)
                    type_identifier [className] (30:6-30:15)
                    default_type [={glassStyles}
      onMouseEnter={() => isInteractive && setIsFocused(true)}
      onMouseLeave={() => isInteractive && setIsFocused(false)] (30:15-32:62)
                      = [=] (30:15-30:16)
                      ERROR [{glassStyles}
      onMouseEnter={() => isInteractive && setIsFocused(true)}
      onMouseLeave={() => isInteractive] (30:16-32:39)
                        object_type [{glassStyles}] (30:16-30:29)
                          { [{] (30:16-30:17)
                          property_signature [glassStyles] (30:17-30:28)
                            property_identifier [glassStyles] (30:17-30:28)
                          } [}] (30:28-30:29)
                        identifier [onMouseEnter] (31:6-31:18)
                        = [=] (31:18-31:19)
                        { [{] (31:19-31:20)
                        function_type [() => isInteractive && setIsFocused(true)] (31:20-31:61)
                          formal_parameters [()] (31:20-31:22)
                            ( [(] (31:20-31:21)
                            ) [)] (31:21-31:22)
                          => [=>] (31:23-31:25)
                          intersection_type [isInteractive && setIsFocused(true)] (31:26-31:61)
                            type_identifier [isInteractive] (31:26-31:39)
                            & [&] (31:40-31:41)
                            intersection_type [& setIsFocused(true)] (31:41-31:61)
                              & [&] (31:41-31:42)
                              ERROR [setIsFocused] (31:43-31:55)
                                identifier [setIsFocused] (31:43-31:55)
                              parenthesized_type [(true)] (31:55-31:61)
                                ( [(] (31:55-31:56)
                                literal_type [true] (31:56-31:60)
                                  true [true] (31:56-31:60)
                                ) [)] (31:60-31:61)
                        } [}] (31:61-31:62)
                        type_identifier [onMouseLeave] (32:6-32:18)
                        = [=] (32:18-32:19)
                        { [{] (32:19-32:20)
                        ERROR [() =>] (32:20-32:25)
                          formal_parameters [()] (32:20-32:22)
                            ( [(] (32:20-32:21)
                            ) [)] (32:21-32:22)
                          => [=>] (32:23-32:25)
                        property_identifier [isInteractive] (32:26-32:39)
                      intersection_type [&& setIsFocused(false)] (32:40-32:62)
                        & [&] (32:40-32:41)
                        intersection_type [& setIsFocused(false)] (32:41-32:62)
                          & [&] (32:41-32:42)
                          ERROR [setIsFocused] (32:43-32:55)
                            identifier [setIsFocused] (32:43-32:55)
                          parenthesized_type [(false)] (32:55-32:62)
                            ( [(] (32:55-32:56)
                            literal_type [false] (32:56-32:61)
                              false [false] (32:56-32:61)
                            ) [)] (32:61-32:62)
                  ERROR [}] (32:62-32:63)
                    } [}] (32:62-32:63)
                  > [>] (33:4-33:5)
              binary_expression [{children}
    </div>] (34:6-35:10)
                object [{children}] (34:6-34:16)
                  { [{] (34:6-34:7)
                  shorthand_property_identifier [children] (34:7-34:15)
                  } [}] (34:15-34:16)
                < [<] (35:4-35:5)
                regex [/div>] (35:5-35:10)
                  / [/] (35:5-35:6)
                  regex_pattern [div>] (35:6-35:10)
                  / [] (35:10-35:10)
              ) [)] (36:2-36:3)
            ; [;] (36:3-36:4)
          } [}] (37:0-37:1)
    ; [;] (37:1-37:2)
  export_statement [export default GlassContainer;] (39:0-39:30)
    export [export] (39:0-39:6)
    default [default] (39:7-39:14)
    identifier [GlassContainer] (39:15-39:29)
    ; [;] (39:29-39:30)

AST for temp_dir\ARTGuru-AI-main\vite.config.ts
==================================================
program [import { vitePlugin as remix } from "@remix-run/dev";
import { defineConfig } from "vite";
import tsconfigPaths from "vite-tsconfig-paths";

declare module "@remix-run/node" {
  interface Future {
    v3_singleFetch: true;
  }
}

export default defineConfig({
  plugins: [
    remix({
      future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true,
      },
    }),
    tsconfigPaths(),
  ],
  server: {
    host: "0.0.0.0",
    port: 5173,
  },
  build: {
    sourcemap: process.env.NODE_ENV === 'development'
  }
});] (0:0-30:3)
  import_statement [import { vitePlugin as remix } from "@remix-run/dev";] (0:0-0:53)
    import [import] (0:0-0:6)
    import_clause [{ vitePlugin as remix }] (0:7-0:30)
      named_imports [{ vitePlugin as remix }] (0:7-0:30)
        { [{] (0:7-0:8)
        import_specifier [vitePlugin as remix] (0:9-0:28)
          identifier [vitePlugin] (0:9-0:19)
          as [as] (0:20-0:22)
          identifier [remix] (0:23-0:28)
        } [}] (0:29-0:30)
    from [from] (0:31-0:35)
    string ["@remix-run/dev"] (0:36-0:52)
      " ["] (0:36-0:37)
      string_fragment [@remix-run/dev] (0:37-0:51)
      " ["] (0:51-0:52)
    ; [;] (0:52-0:53)
  import_statement [import { defineConfig } from "vite";] (1:0-1:36)
    import [import] (1:0-1:6)
    import_clause [{ defineConfig }] (1:7-1:23)
      named_imports [{ defineConfig }] (1:7-1:23)
        { [{] (1:7-1:8)
        import_specifier [defineConfig] (1:9-1:21)
          identifier [defineConfig] (1:9-1:21)
        } [}] (1:22-1:23)
    from [from] (1:24-1:28)
    string ["vite"] (1:29-1:35)
      " ["] (1:29-1:30)
      string_fragment [vite] (1:30-1:34)
      " ["] (1:34-1:35)
    ; [;] (1:35-1:36)
  import_statement [import tsconfigPaths from "vite-tsconfig-paths";] (2:0-2:48)
    import [import] (2:0-2:6)
    import_clause [tsconfigPaths] (2:7-2:20)
      identifier [tsconfigPaths] (2:7-2:20)
    from [from] (2:21-2:25)
    string ["vite-tsconfig-paths"] (2:26-2:47)
      " ["] (2:26-2:27)
      string_fragment [vite-tsconfig-paths] (2:27-2:46)
      " ["] (2:46-2:47)
    ; [;] (2:47-2:48)
  ambient_declaration [declare module "@remix-run/node" {
  interface Future {
    v3_singleFetch: true;
  }
}] (4:0-8:1)
    declare [declare] (4:0-4:7)
    module [module "@remix-run/node" {
  interface Future {
    v3_singleFetch: true;
  }
}] (4:8-8:1)
      module [module] (4:8-4:14)
      string ["@remix-run/node"] (4:15-4:32)
        " ["] (4:15-4:16)
        string_fragment [@remix-run/node] (4:16-4:31)
        " ["] (4:31-4:32)
      statement_block [{
  interface Future {
    v3_singleFetch: true;
  }
}] (4:33-8:1)
        { [{] (4:33-4:34)
        interface_declaration [interface Future {
    v3_singleFetch: true;
  }] (5:2-7:3)
          interface [interface] (5:2-5:11)
          type_identifier [Future] (5:12-5:18)
          object_type [{
    v3_singleFetch: true;
  }] (5:19-7:3)
            { [{] (5:19-5:20)
            property_signature [v3_singleFetch: true] (6:4-6:24)
              property_identifier [v3_singleFetch] (6:4-6:18)
              type_annotation [: true] (6:18-6:24)
                : [:] (6:18-6:19)
                literal_type [true] (6:20-6:24)
                  true [true] (6:20-6:24)
            ; [;] (6:24-6:25)
            } [}] (7:2-7:3)
        } [}] (8:0-8:1)
  export_statement [export default defineConfig({
  plugins: [
    remix({
      future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true,
      },
    }),
    tsconfigPaths(),
  ],
  server: {
    host: "0.0.0.0",
    port: 5173,
  },
  build: {
    sourcemap: process.env.NODE_ENV === 'development'
  }
});] (10:0-30:3)
    export [export] (10:0-10:6)
    default [default] (10:7-10:14)
    call_expression [defineConfig({
  plugins: [
    remix({
      future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true,
      },
    }),
    tsconfigPaths(),
  ],
  server: {
    host: "0.0.0.0",
    port: 5173,
  },
  build: {
    sourcemap: process.env.NODE_ENV === 'development'
  }
})] (10:15-30:2)
      identifier [defineConfig] (10:15-10:27)
      arguments [({
  plugins: [
    remix({
      future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true,
      },
    }),
    tsconfigPaths(),
  ],
  server: {
    host: "0.0.0.0",
    port: 5173,
  },
  build: {
    sourcemap: process.env.NODE_ENV === 'development'
  }
})] (10:27-30:2)
        ( [(] (10:27-10:28)
        object [{
  plugins: [
    remix({
      future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true,
      },
    }),
    tsconfigPaths(),
  ],
  server: {
    host: "0.0.0.0",
    port: 5173,
  },
  build: {
    sourcemap: process.env.NODE_ENV === 'development'
  }
}] (10:28-30:1)
          { [{] (10:28-10:29)
          pair [plugins: [
    remix({
      future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true,
      },
    }),
    tsconfigPaths(),
  ]] (11:2-22:3)
            property_identifier [plugins] (11:2-11:9)
            : [:] (11:9-11:10)
            array [[
    remix({
      future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true,
      },
    }),
    tsconfigPaths(),
  ]] (11:11-22:3)
              [ [[] (11:11-11:12)
              call_expression [remix({
      future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true,
      },
    })] (12:4-20:6)
                identifier [remix] (12:4-12:9)
                arguments [({
      future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true,
      },
    })] (12:9-20:6)
                  ( [(] (12:9-12:10)
                  object [{
      future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true,
      },
    }] (12:10-20:5)
                    { [{] (12:10-12:11)
                    pair [future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true,
      }] (13:6-19:7)
                      property_identifier [future] (13:6-13:12)
                      : [:] (13:12-13:13)
                      object [{
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true,
      }] (13:14-19:7)
                        { [{] (13:14-13:15)
                        pair [v3_fetcherPersist: true] (14:8-14:31)
                          property_identifier [v3_fetcherPersist] (14:8-14:25)
                          : [:] (14:25-14:26)
                          true [true] (14:27-14:31)
                        , [,] (14:31-14:32)
                        pair [v3_relativeSplatPath: true] (15:8-15:34)
                          property_identifier [v3_relativeSplatPath] (15:8-15:28)
                          : [:] (15:28-15:29)
                          true [true] (15:30-15:34)
                        , [,] (15:34-15:35)
                        pair [v3_throwAbortReason: true] (16:8-16:33)
                          property_identifier [v3_throwAbortReason] (16:8-16:27)
                          : [:] (16:27-16:28)
                          true [true] (16:29-16:33)
                        , [,] (16:33-16:34)
                        pair [v3_singleFetch: true] (17:8-17:28)
                          property_identifier [v3_singleFetch] (17:8-17:22)
                          : [:] (17:22-17:23)
                          true [true] (17:24-17:28)
                        , [,] (17:28-17:29)
                        pair [v3_lazyRouteDiscovery: true] (18:8-18:35)
                          property_identifier [v3_lazyRouteDiscovery] (18:8-18:29)
                          : [:] (18:29-18:30)
                          true [true] (18:31-18:35)
                        , [,] (18:35-18:36)
                        } [}] (19:6-19:7)
                    , [,] (19:7-19:8)
                    } [}] (20:4-20:5)
                  ) [)] (20:5-20:6)
              , [,] (20:6-20:7)
              call_expression [tsconfigPaths()] (21:4-21:19)
                identifier [tsconfigPaths] (21:4-21:17)
                arguments [()] (21:17-21:19)
                  ( [(] (21:17-21:18)
                  ) [)] (21:18-21:19)
              , [,] (21:19-21:20)
              ] []] (22:2-22:3)
          , [,] (22:3-22:4)
          pair [server: {
    host: "0.0.0.0",
    port: 5173,
  }] (23:2-26:3)
            property_identifier [server] (23:2-23:8)
            : [:] (23:8-23:9)
            object [{
    host: "0.0.0.0",
    port: 5173,
  }] (23:10-26:3)
              { [{] (23:10-23:11)
              pair [host: "0.0.0.0"] (24:4-24:19)
                property_identifier [host] (24:4-24:8)
                : [:] (24:8-24:9)
                string ["0.0.0.0"] (24:10-24:19)
                  " ["] (24:10-24:11)
                  string_fragment [0.0.0.0] (24:11-24:18)
                  " ["] (24:18-24:19)
              , [,] (24:19-24:20)
              pair [port: 5173] (25:4-25:14)
                property_identifier [port] (25:4-25:8)
                : [:] (25:8-25:9)
                number [5173] (25:10-25:14)
              , [,] (25:14-25:15)
              } [}] (26:2-26:3)
          , [,] (26:3-26:4)
          pair [build: {
    sourcemap: process.env.NODE_ENV === 'development'
  }] (27:2-29:3)
            property_identifier [build] (27:2-27:7)
            : [:] (27:7-27:8)
            object [{
    sourcemap: process.env.NODE_ENV === 'development'
  }] (27:9-29:3)
              { [{] (27:9-27:10)
              pair [sourcemap: process.env.NODE_ENV === 'development'] (28:4-28:53)
                property_identifier [sourcemap] (28:4-28:13)
                : [:] (28:13-28:14)
                binary_expression [process.env.NODE_ENV === 'development'] (28:15-28:53)
                  member_expression [process.env.NODE_ENV] (28:15-28:35)
                    member_expression [process.env] (28:15-28:26)
                      identifier [process] (28:15-28:22)
                      . [.] (28:22-28:23)
                      property_identifier [env] (28:23-28:26)
                    . [.] (28:26-28:27)
                    property_identifier [NODE_ENV] (28:27-28:35)
                  === [===] (28:36-28:39)
                  string ['development'] (28:40-28:53)
                    ' ['] (28:40-28:41)
                    string_fragment [development] (28:41-28:52)
                    ' ['] (28:52-28:53)
              } [}] (29:2-29:3)
          } [}] (30:0-30:1)
        ) [)] (30:1-30:2)
    ; [;] (30:2-30:3)
